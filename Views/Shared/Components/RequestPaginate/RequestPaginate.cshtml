@using System.Security.Claims
@using TestNetMVC.Services
@inject PriorityService PriorityService
@{
  Layout = "~/Areas/_Layout.cshtml";
  var userName = Model.account.name;
  var userId = Model.account.id;
  var userRole = Model.account.role;
}

<input type="hidden" value="@userId" id="userId">
<input type="hidden" value="@userName" id="userName">
<input type="hidden" value="@userRole" id="userRole">
@* <script>
$(document).ready(function () {
let userId = $('#userId').val();
let roleUser = $('userRole').val();
$.ajax({
type: "GET",
url: "/ajax/getRequestPaginate",
data: { userId },
success: function (res) {
fillToTable(res, roleUser);
}
});
});


function fillToTable(lists, roleUser) {
let s = "";
for (var i = 0; i < lists.length; i++) {
s += `
<tr>
<td><strong>${i + 1}</strong></td>
<td>${lists[i].title}</td>
<td>${lists[i].sentDate}</td>
<td>${lists[i].priorityName}</td>`;

if (roleUser != "Support Staff") {
s += `<td><strong>${lists[i].handler}</strong></td>`;
}

if (roleUser != "Staff") {
s += `<td><i>${lists[i].sender}</i></td>`;
}

s += `<td>${lists[i].description}</td>
</tr>`;
}
// end loop
$('#tableRequests tbody').html(s);
};

</script> *@

<script>
  $(document).ready(function () {
    //********* Paginate Logic
    let userId = $('#userId').val();
    let roleUser = $('#userRole').val();
    let currentPage = 1;
    let itemsPerPage = 10;
    $('#pangiateRow').on('click', 'a.page-link', function () {
      currentPage = parseInt($(this).text()); // Cập nhật trang hiện tại
      getRequestPaginate(userId, currentPage, itemsPerPage, roleUser); // Gọi hàm để lấy dữ liệu cho trang mới
    });

    getRequestPaginate(userId, currentPage, itemsPerPage, roleUser); // Lấy dữ liệu cho trang đầu tiên

    //********* Paginate Logic


    //********** filter Logic

    $('#fromDate').datepicker({ dateFormat: "dd/mm/yy" });
    $('#toDate').datepicker({ dateFormat: "dd/mm/yy" });

    $('#fromDate, #toDate, #fiterPriority').change(function () {
      let fromDate = $('#fromDate').val();
      let toDate = $('#toDate').val();
      let priorityId = $('#fiterPriority').val();
      $.ajax({
        type: "GET",
        url: '/ajax/Filter',
        data: { fromDate, toDate, priorityId },
        success: function (res) {
          fillToTable(res, roleUser);
          updatePagination(1, 1);
        },
      });
    });
    //********** filter Logic

  });



  // call Request show table Ajax
  function getRequestPaginate(userId, page, pageSize, roleUser) {
    $.ajax({
      type: "GET",
      url: "/ajax/getRequestPaginate",
      data: { userId, page, pageSize },
      success: function (res) {
        fillToTable(res.requests, roleUser);
        updatePagination(res.totalPages, page);

      }
    });
  }

  function fillToTable(lists, roleUser) {
    let s = "";
    for (var i = 0; i < lists.length; i++) {
      s += `
      <tr>
        <td ><strong>${i + 1}</strong></td>
        <td style="width:250px;" >${lists[i].title}</td>
        <td>${lists[i].sentDate}</td>
        <td>${lists[i].priorityName}</td>`;
      if (roleUser != "Support Staff") {
        s += `<td><strong>${lists[i].handler}</strong></td>`;
      }
      if (roleUser != "Staff") {
        s += `<td><i>${lists[i].sender}</i></td>`;
      }

      s += `<td style="width: 300px;">
        <span class="d-inline-block text-truncate" style="width: 300px;" > ${lists[i].description}</span>
        </td>
      </tr>`;
    }
    // Kết thúc vòng lặp

    $('#tableRequests tbody').html(s);
  };

  function updatePagination(totalPages, inPageActive) {
    let pagination = $('#pangiateRow .pagination');
    pagination.empty(); // Xóa các nút phân trang cũ

    if (totalPages > 1) {
      for (let i = 1; i <= totalPages; i++) {
        pagination.append(`<li class="page-item btn p-1  ${inPageActive == i ? "active" : ""}" ><a class="page-link">${i}</a></li>`); // Thêm nút cho mỗi trang
      }
    }
  }


  //===============
</script>


<div class="container-fluid" id="boxRequest">
  <div id="requestHeader" class="row justify-content-center align-content-center">
    <div class="h1">Requests</div>
  </div>
  <!--ADD NEW REQUEST  + FORM FILTER--->
  <div class="row justify-content-start">
    <!--Modal Add Request--->
    <div class="modal-add-request ml-4 mb-2">
      <button type="button" class="btn btn-info  @(userRole != "Staff" ?"invisible":"visible")" data-toggle="modal"
        data-target="#AddNewRequest">
        Add New Requests
      </button>

      @(await Html.PartialAsync("~/Areas/Shared/Modals/_AddNewRequestModal.cshtml", new ViewDataDictionary(ViewData) { {
      "username", userName } }))
    </div>
    <!--Modal Add Request End--->




  </div>
  <!--ADD NEW REQUEST  + FORM FILTER--->
  <div class="row ml-4">
    <button class="btn btn-primary ml-n2" type="button" data-toggle="collapse" data-target="#filterDropdown"
      aria-expanded="false" aria-controls="filterDropdown">
      Filter
    </button>


  </div>
  <div class="row ml-3 mt-2">
    <div class="collapse row" id="filterDropdown">
      <!--Form Filter--->
      <div class="form-group align-content-center m-0 ml-2">
        <label class="sr-only" for="fromDate">From</label>
        <div class="input-group">
          <div class="input-group-prepend">
            <div class="input-group-text">From</div>
          </div>
          <input type="text" class="form-control" id="fromDate">
        </div>
      </div>
      <!---->
      <div class="form-group  align-content-center m-0 ml-2">
        <label class="sr-only" for="toDate">To</label>
        <div class="input-group">
          <div class="input-group-prepend">
            <div class="input-group-text">To</div>
          </div>
          <input type="text" class="form-control" id="toDate">
        </div>
      </div>


      <!---->
      <div class="input-group-prepend ml-2">
        <select class="custom-select" id="fiterPriority" name="priorityId">
          <!option value="-1" selected>Choose Priority</!option>
          @foreach (var pri in PriorityService.FindAll())
          {
            <!option value="@pri.Id">@pri.PriorityName</!option>
          }
        </select>

        <label class="input-group-text" for="fiterPriority">Priority</label>
      </div>
      <!--Clear-->
      <a class="btn btn-warning ml-4" asp-action="RequestsPaginate">Clear All</a>
      <!---->
    </div>
  </div>

  <!--TABLE-->


  <div class="row justify-content-center">
    <table class="table table-hover table-bordered text-center text-nowrap m-4  " id="tableRequests">
      <thead>
        <tr class="bg-info">
          <th>#</th>
          <th>Title</th>
          <th>Sent Date</th>
          <th>Priority</th>

          @if (userRole != "Support Staff")
          {
            <th>Handler</th>
          }
          @if (userRole != "Staff")
          {
            <th>Sender</th>
          }
          <th>Description</th>
        </tr>
      </thead>
      <tbody>

      </tbody>
    </table>
  </div>

</div>

<div class="row justify-content-center" id="pangiateRow">
  <ul class="pagination pagination-lg mb-0"></ul>
</div>
