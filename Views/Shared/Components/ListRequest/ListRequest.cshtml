@using TestNetMVC.Models
@using TestNetMVC.Services
@inject RequestService RequestService
@inject PriorityService PriorityService
@using System.Security.Claims
@{
  Layout = "~/Areas/_Layout.cshtml";
  var roleuser = User.FindFirst(ClaimTypes.Role).Value;
  var username = User.FindFirst(ClaimTypes.Name).Value;
  var request = new TestNetMVC.Models.Request { };
  int id = Model.userId;
  int thisPage = Model.thisPage;
  int requestsCount = 0;
  var roleArea = "";
  var roleController = "";
  var roleRequestAction = "";
  switch (roleuser)
  {
    case "Admin":
      roleArea = "Admin";
      roleController = "Admin";
      roleRequestAction = "Requests";
      requestsCount = RequestService.FindAll().Count();
      break;
    case "Staff":
      roleArea = "Employees";
      roleController = "Employees";
      roleRequestAction = "EmployeesRequest";
      requestsCount = RequestService.FindRequestEmployeeSubmitId(id).Count();
      break;

    case "Support Staff":
      roleArea = "Support";
      roleController = "Support";
      roleRequestAction = "SupportRequest";
      requestsCount = RequestService.FindRequestEmployeeHandleId(id).Count();
      break;
  };
  if (requestsCount % 10 != 0)
  {
    requestsCount = (requestsCount / 10) + 1;
  }
  else
  {
    requestsCount = requestsCount / 10;
  }

}
<div class="container-fluid">
  <div class="row justify-content-center"><b class="h1">List Request</b></div>

  <!--ADD NEW REQUEST  + FORM FILTER--->
  <div class="row justify-content-start">
    <!--Modal Add Request--->
    <div class="modal-add-request ml-4 mb-2">
      <button type="button" class="btn btn-info  @(roleuser != "Staff" ?"invisible":"visible")" data-toggle="modal"
        data-target="#AddNewRequest">
        Add New Requests
      </button>

      @(await Html.PartialAsync("~/Areas/Shared/Modals/_AddNewRequestModal.cshtml", request,
          new ViewDataDictionary(ViewData) { { "username", username } }))
    </div>
    <!--Modal Add Request End--->




  </div>

  <div class="row ml-4">
    <button class="btn btn-primary ml-n2" type="button" data-toggle="collapse" data-target="#filterDropdown"
      aria-expanded="false" aria-controls="filterDropdown">
      Filter
    </button>


  </div>
  <div class="row ml-3 mt-2">
    <div class="collapse row" id="filterDropdown">
      <!--Form Filter--->
      <div class="form-group align-content-center m-0 ml-2">
        <label class="sr-only" for="fromDate">From</label>
        <div class="input-group">
          <div class="input-group-prepend">
            <div class="input-group-text">From</div>
          </div>
          <input type="text" class="form-control" id="fromDate">
        </div>
      </div>
      <!---->
      <div class="form-group  align-content-center m-0 ml-2">
        <label class="sr-only" for="toDate">To</label>
        <div class="input-group">
          <div class="input-group-prepend">
            <div class="input-group-text">To</div>
          </div>
          <input type="text" class="form-control" id="toDate">
        </div>
      </div>


      <!---->
      <div class="input-group-prepend">
        <select class="custom-select" id="fiterPriority" name="priorityId">
          <!option value="-1" selected>Choose Priority</!option>
          @foreach (var pri in PriorityService.FindAll())
          {
            <!option value="@pri.Id">@pri.PriorityName</!option>
          }
        </select>

        <label class="input-group-text" for="fiterPriority">Priority</label>
      </div>
      <!---->
    </div>
  </div>
  <!--TABLE--->
  <div class="row justify-content-center">
    <table class="table table-hover table-bordered text-center text-nowrap m-4" id="tableRequests">
      <thead>
        <tr class="bg-info">
          <th>#</th>
          <th>Title</th>
          <th>Sent Date</th>
          <th>Priority</th>

          @if (roleuser != "Support Staff")
          {
            <th>Handler</th>
          }
          @if (roleuser != "Staff")
          {
            <th>Sender</th>
          }
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        @{
          int i = 1;
        }
        @foreach (var r in Model.requests)
        {
          <tr>
            <td><strong>@(i++)</strong></td>
            <td>@r.Title</td>
            <td>@r.SentDate.ToString("dd-MM-yyyy")</td>
            <td>@r.Priority.PriorityName</td>
            @if (roleuser != "Support Staff")
            {
              <td>
                <strong>
                  @(r.EmployeeIdHandlingNavigation != null ? r.EmployeeIdHandlingNavigation.Username : "none")
                </strong>
              </td>
            }
            @if (roleuser != "Staff")
            {
              <td><i>

                  @r.EmployeeIdSubmitNavigation.Username
                </i>
              </td>
            }
            <td>@r.Description</td>
          </tr>
        }
      </tbody>
    </table>
  </div>




  <div class="row justify-content-center" id="pangiateRow">
    <ul class="pagination pagination-lg">
      @for (int j = 1; j <= requestsCount; j++)
      {
        <li class="@(thisPage == j?"page-item active":"page-item")"><a class="page-link" asp-controller="@roleController"
            asp-action="@roleRequestAction" asp-route-pages="@j">@j</a></li>
      }
    </ul>
  </div>
  <!--input role name hidden-->
  <input type="hidden" value="@roleuser" id="RoleNameHidden">

  <script>
    $(document).ready(function () {
      $('#fromDate').datepicker({ dateFormat: "dd/mm/yy" });
      $('#toDate').datepicker({ dateFormat: "dd/mm/yy" });

      $('#fromDate, #toDate, #fiterPriority').change(function () {
        let fromDate = $('#fromDate').val();
        let toDate = $('#toDate').val();
        let priorityId = $('#fiterPriority').val();
        let roleUser = $('#RoleNameHidden').val();
        $.ajax({
          type: "GET",
          url: '/ajax/Filter',
          data: { fromDate, toDate, priorityId },
          success: function (res) {
            $('#pangiateRow').remove();
            fillToTable2(res, roleUser);
            console.log(res);
          },
        });
      });
      // =============
    });

    //-------------

    function fillToTable(lists, roleUser) {
      let s = "";
      for (var i = 0; i < lists.length; i++) {
        s += `
      <tr>
        <td><strong>${i + 1}</strong></td>
        <td>${lists[i].title}</td>
        <td>${lists[i].sentDate}</td>
        <td>${lists[i].priorityName}</td>`;

        if (roleUser != "Support Staff") {
          s += `<td><strong>${lists[i].handler}</strong></td>`;
        }

        if (roleUser != "Staff") {
          s += `<td><i>${lists[i].sender}</i></td>`;
        }

        s += `<td>${lists[i].description}</td>
      </tr>`;
      }
      // end loop
      $('#tableRequests tbody').html(s);
    };
    //-----------
  </script>
</div>
