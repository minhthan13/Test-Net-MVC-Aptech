@using TestNetMVC.Models
@using TestNetMVC.Services
@inject RequestService RequestService
@inject PriorityService PriorityService
@using System.Security.Claims
@{
  Layout = "~/Areas/_Layout.cshtml";
  var roleuser = User.FindFirst(ClaimTypes.Role).Value;
  var username = User.FindFirst(ClaimTypes.Name).Value;
  var request = new TestNetMVC.Models.Request { };
  int id = Model.userId;
  int thisPage = Model.thisPage;
  int requestsCount = 0;
  var roleArea = "";
  var roleController = "";
  var roleRequestAction = "";
  switch (roleuser)
  {
    case "Admin":
      roleArea = "Admin";
      roleController = "Admin";
      roleRequestAction = "Requests";
      requestsCount = RequestService.FindAll().Count();
      break;
    case "Staff":
      roleArea = "Employees";
      roleController = "Employees";
      roleRequestAction = "EmployeesRequest";
      requestsCount = RequestService.FindRequestEmployeeSubmitId(id).Count();
      break;

    case "Support Staff":
      roleArea = "Support";
      roleController = "Support";
      roleRequestAction = "SupportRequest";
      requestsCount = RequestService.FindRequestEmployeeHandleId(id).Count();
      break;
  };
  if (requestsCount % 5 != 0)
  {
    requestsCount = (requestsCount / 5) + 1;
  }
  else
  {
    requestsCount = requestsCount / 5;
  }

}

<div class="row justify-content-center"><b class="h1">List Request</b></div>
<div class="row">
  <div class="col-12">
    <div class="card">
      <div class="card-header row justify-content-between">

        <div class="modal-add-request ml-4 col-5 @(roleuser != "Staff" ? "invisible": "visible")">
          <button type="button" class="btn btn-info" data-toggle="modal" data-target="#AddNewRequest">
            Add New Requests
          </button>

          @(await Html.PartialAsync("~/Areas/Shared/Modals/_AddNewRequestModal.cshtml", request,
              new ViewDataDictionary(ViewData) { { "username", username } }))
        </div>

        <!--Form Filter--->
        <div id="filter-tools" class="d-flex col-6 row justify-content-end">

          <div class="form-group align-content-center m-0 ml-2">
            <label class="sr-only" for="fromDate">From</label>
            <div class="input-group">
              <div class="input-group-prepend">
                <div class="input-group-text">From</div>
              </div>
              <input type="date" class="form-control" id="fromDate">
            </div>
          </div>
          <div class="form-group  align-content-center m-0 ml-2">
            <label class="sr-only" for="toDate">To</label>
            <div class="input-group">
              <div class="input-group-prepend">
                <div class="input-group-text">To</div>
              </div>
              <input type="date" class="form-control" id="toDate">
            </div>
          </div>
          <!-- /.Priority -->
          <div class="input-group-prepend ml-5">
            <select class="custom-select" id="fiterPriority" name="priorityId">
              <!option value="-1" selected>Choose Priority</!option>
              @foreach (var pri in PriorityService.FindAll())
              {
                <!option value="@pri.Id">@pri.PriorityName</!option>
              }
            </select>

            <label class="input-group-text" for="inputGroupSelect01">Priority</label>
          </div>

        </div>

        <!--Form Filter--->

      </div>
      <div class="card-body p-0" style="height: 300px;">
        <table class="table table-hover text-nowrap">
          <thead>
            <tr>
              <th>#</th>
              <th>Title</th>
              <th>Sent Date</th>
              <th>Priority</th>

              @if (roleuser != "Support Staff")
              {
                <th>Handler</th>
              }
              @if (roleuser != "Staff")
              {
                <th>Sender</th>
              }
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            @{
              int i = 1;
            }
            @foreach (var r in Model.requests)
            {
              <tr>
                <td>@(i++)
                </td>
                <td>@r.Title</td>

                <td>@r.SentDate.ToString("dd-MM-yyyy")</td>
                <td>@r.Priority.PriorityName</td>
                @if (roleuser != "Support Staff")
                {
                  <td>
                    <b>
                      @(r.EmployeeIdHandlingNavigation != null ? r.EmployeeIdHandlingNavigation.Username : "none")
                    </b>
                  </td>
                }
                @if (roleuser != "Staff")
                {
                  <td><i>

                      @r.EmployeeIdSubmitNavigation.Username
                    </i>
                  </td>
                }
                <td>@r.Description</td>
              </tr>
            }
          </tbody>
        </table>




      </div>




      <!-- /Pagination -->
      <hr>
      <div class="row justify-content-center">

        <ul class="pagination pagination-lg">
          @for (int j = 1; j <= requestsCount; j++)
          {
            <li class="@(thisPage == j?"page-item active":"page-item")"><a class="page-link" asp-area="@roleArea"
                asp-controller="@roleController" asp-action="@roleRequestAction" asp-route-page="@j">@j</a></li>
          }
        </ul>
      </div>




    </div>
    <!-- /.card -->
  </div>
</div>